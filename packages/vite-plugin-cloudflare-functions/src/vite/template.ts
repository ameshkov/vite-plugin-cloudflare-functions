export const DtsFilename = 'cloudflare.d.ts';

export function getDefaultTsconfig() {
  const tsconfig = {
    compilerOptions: {
      jsx: 'preserve',
      target: 'ESNext',
      module: 'ESNext',
      moduleResolution: 'Node',
      skipLibCheck: true,
      strict: false,
      allowJs: true,
      noEmit: true,
      resolveJsonModule: true,
      allowSyntheticDefaultImports: true,
      baseUrl: '..',
      paths: {}
    },
    include: ['./' + DtsFilename, '../**/*']
  };
  return '// Generated by vite-plugin-cloudflare-functions\n' + JSON.stringify(tsconfig, null, 2);
}

export function getDts() {
  return [
    '// Generated by vite-plugin-cloudflare-functions\n',
    `/// <reference types="@cloudflare/workers-types" />\n`,
    `declare global {`,
    `  const CloudflareResponse: typeof import('vite-plugin-cloudflare-functions/worker')['CloudflareResponse'];`,
    `  type CloudflarePagesFunction<
    T = unknown,
    Env = unknown,
    Params extends string = any,
    Data extends Record<string, unknown> = Record<string, unknown>
  > = (
    context: Parameters<PagesFunction<Env, Params, Data>>[0]
  ) => CloudflareResponse<T> | Promise<CloudflareResponse<T>>;`,
    `}\n`,
    'export {}'
  ].join('\n');
}
